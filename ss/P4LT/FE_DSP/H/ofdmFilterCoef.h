/*----------------------------------------------------------------------------*
 * $Workfile: ofdmFilterCoef.h $
 * Part of      : ETL600 / P4LT
 * Language     : C
 * Created by   : H.-J. Maag
 * Remarks      :  
 * Purpose      : Filter for tx processing of OFDM signal
 * Copyright    : ABB Switzerland Ltd., 2003
 *----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*
 * $Log: /branches/Source MAS/P4LT/FE_DSP/H/ofdmFilterCoef.h $
 * 
 * 6     9.05.08 18:26 Chhamaa
 * Filter coefs for new DPLC BW 2, 6 kHz added.
 * 
 * 1     5.04.06 14:19 Chhamaa
 * 
 * 2     15.03.06 14:45 Chhamaa
 * New filter added: Lowpass filter, OFDM BW = 4000 Hz, Low Ripple
 * 
 * 1     7.02.06 9:54 Chhamaa
 * Initial version.
 * 
 * 
 *----------------------------------------------------------------------------*/
 
#ifndef OFDM_FILTER_COEF_H
#define OFDM_FILTER_COEF_H


/* GLOBAL CONSTANT DECLARATIONS ***********************************************/

#define OFDM_LPF_STATE_MAX	14		// max. lenght of OFDM filter state vector


// Lowpass filter, OFDM BW = 1784 Hz
// [z,p,k] = ellip(12,0.2,110,2*892/fs) fs = 64000

#define OFDM_FILTER_STATE_1784	12
#define OFDM_FILTER_SEC_1784	 6

static float pm ofdmFilterCoef1784[2*OFDM_FILTER_STATE_1784 + 1] = {
	
	-9.5824479e-001, 1.9575552e+000, 1.0000000e+000,-1.6582349e+000,
	-9.6585510e-001, 1.9636515e+000, 1.0000000e+000,-1.9533503e+000,
	-9.7643876e-001, 1.9721587e+000, 1.0000000e+000,-1.9787879e+000,
	-9.8582798e-001, 1.9797818e+000, 1.0000000e+000,-1.9855677e+000,
	-9.9274503e-001, 1.9855567e+000, 1.0000000e+000,-1.9880547e+000,
	-9.9779737e-001, 1.9900675e+000, 1.0000000e+000,-1.9889504e+000,
	 3.3142782e-006
};


// Lowpass filter, OFDM BW = 1890 Hz
// [z,p,k] = ellip(14,0.2,110,2*945/fs) fs = 64000

#define OFDM_FILTER_STATE_1890	14
#define OFDM_FILTER_SEC_1890	 7

static float pm ofdmFilterCoef1890[2*OFDM_FILTER_STATE_1890 + 1] = {

	-9.5753363e-001, 1.9568204e+000, 1.0000000e+000,-1.6491321e+000,
	-9.6519721e-001, 1.9629151e+000, 1.0000000e+000,-1.9520648e+000,
	-9.7580318e-001, 1.9713584e+000, 1.0000000e+000,-1.9782654e+000,
	-9.8507475e-001, 1.9787620e+000, 1.0000000e+000,-1.9853008e+000,
	-9.9161638e-001, 1.9840340e+000, 1.0000000e+000,-1.9879735e+000,
	-9.9586568e-001, 1.9875531e+000, 1.0000000e+000,-1.9891161e+000,
	-9.9876537e-001, 1.9901255e+000, 1.0000000e+000,-1.9895563e+000,
	 3.3089905e-006
};


// Lowpass filter, OFDM BW = 3500 Hz
// [z,p,k] = ellip(12,0.2,90,2*1772/fs)

#define OFDM_FILTER_STATE_3500	12
#define OFDM_FILTER_SEC_3500	 6

static float pm ofdmFilterCoef3500[2*OFDM_FILTER_STATE_3500 + 1] = {
	
	-9.0923370e-001, 1.9058440e+000, 1.0000000e+000,-1.2068183e+000,
	-9.3068088e-001, 1.9203130e+000, 1.0000000e+000,-1.8736594e+000,
	-9.5707529e-001, 1.9381701e+000, 1.0000000e+000,-1.9381846e+000,
	-9.7698871e-001, 1.9517807e+000, 1.0000000e+000,-1.9552742e+000,
	-9.8929786e-001, 1.9605094e+000, 1.0000000e+000,-1.9613709e+000,
	-9.9692531e-001, 1.9665730e+000, 1.0000000e+000,-1.9635021e+000,
	 3.6612584e-005
};

// Lowpass filter, OFDM BW = 3550 Hz
// [z,p,k] = ellip(12,0.2,90,2*1772/fs)
/*
#define OFDM_FILTER_STATE_3500	12
#define OFDM_FILTER_SEC_3500	 6

static float pm ofdmFilterCoef3500[2*OFDM_FILTER_STATE_3500 + 1] = {

	-9.0800794e-001, 1.9045237e+000, 1.0000000e+000,-1.1887570e+000,
	-9.2973759e-001, 1.9190796e+000, 1.0000000e+000,-1.8701678e+000,
	-9.5648568e-001, 1.9370490e+000, 1.0000000e+000,-1.9364469e+000,
	-9.7667038e-001, 1.9507512e+000, 1.0000000e+000,-1.9540114e+000,
	-9.8914915e-001, 1.9595467e+000, 1.0000000e+000,-1.9602784e+000,
	-9.9688245e-001, 1.9656706e+000, 1.0000000e+000,-1.9624694e+000,
	 3.6807573e-005
};
*/
// Lowpass filter, OFDM BW = 3600 Hz
// [z,p,k] = ellip(12,0.2,90,2*1772/fs)
/*
#define OFDM_FILTER_STATE_3500	12
#define OFDM_FILTER_SEC_3500	 6

static float pm ofdmFilterCoef3500[2*OFDM_FILTER_STATE_3500 + 1] = {

	-9.0688149e-001, 1.9033092e+000, 1.0000000e+000,-1.1720948e+000,
	-9.2887058e-001, 1.9179423e+000, 1.0000000e+000,-1.8669171e+000,
	-9.5594366e-001, 1.9360117e+000, 1.0000000e+000,-1.9348278e+000,
	-9.7637771e-001, 1.9497957e+000, 1.0000000e+000,-1.9528343e+000,
	-9.8901240e-001, 1.9586512e+000, 1.0000000e+000,-1.9592601e+000,
	-9.9684304e-001, 1.9648299e+000, 1.0000000e+000,-1.9615067e+000,
	 3.6990085e-005
};
*/
// Lowpass filter, OFDM BW = 3650 Hz
// [z,p,k] = ellip(12,0.2,90,2*1772/fs)
/*
#define OFDM_FILTER_STATE_3500	12
#define OFDM_FILTER_SEC_3500	 6

static float pm ofdmFilterCoef3500[2*OFDM_FILTER_STATE_3500 + 1] = {
	
	-9.0575622e-001, 1.9020949e+000, 1.0000000e+000,-1.1553929e+000,
	-9.2800436e-001, 1.9168024e+000, 1.0000000e+000,-1.8636297e+000,
	-9.5540203e-001, 1.9349686e+000, 1.0000000e+000,-1.9331889e+000,
	-9.7608521e-001, 1.9488321e+000, 1.0000000e+000,-1.9516427e+000,
	-9.8887573e-001, 1.9577463e+000, 1.0000000e+000,-1.9582291e+000,
	-9.9680364e-001, 1.9639792e+000, 1.0000000e+000,-1.9605320e+000,
	 3.7175596e-005	
};
*/


// Lowpass filter, OFDM BW = 4000 Hz
// [z,p,k] = ellip(12,0.2,90,2*2022/fs)

#define OFDM_FILTER_STATE_4000	12
#define OFDM_FILTER_SEC_4000	 6

static float pm ofdmFilterCoef4000[2*OFDM_FILTER_STATE_4000 + 1] = {
	
	-8.9703866e-001, 1.8926477e+000, 1.0000000e+000,-1.0244593e+000,
	-9.2128987e-001, 1.9078462e+000, 1.0000000e+000,-1.8368109e+000,
	-9.5120064e-001, 1.9266571e+000, 1.0000000e+000,-1.9197657e+000,
	-9.7381504e-001, 1.9410584e+000, 1.0000000e+000,-1.9418723e+000,
	-9.8781455e-001, 1.9503829e+000, 1.0000000e+000,-1.9497726e+000,
	-9.9649768e-001, 1.9570160e+000, 1.0000000e+000,-1.9525361e+000,
	 3.8722816e-005	
};


// Lowpass filter, OFDM BW = 4000 Hz, Low Ripple
// [z,p,k] = ellip(12,0.1,90,2*1998/fs)

#define OFDM_FILTER_STATE_4000_LR	12
#define OFDM_FILTER_SEC_4000_LR		 6

static float pm ofdmFilterCoef4000LR[2*OFDM_FILTER_STATE_4000_LR + 1] = {

	-8.8476365e-001, 1.8796949e+000, 1.0000000e+000,-9.9563868e-001,
	-9.1101280e-001, 1.8974752e+000, 1.0000000e+000,-1.8319319e+000,
	-9.4390737e-001, 1.9198275e+000, 1.0000000e+000,-1.9182251e+000,
	-9.6934148e-001, 1.9373022e+000, 1.0000000e+000,-1.9413393e+000,
	-9.8550071e-001, 1.9488356e+000, 1.0000000e+000,-1.9496564e+000,
	-9.9579128e-001, 1.9570574e+000, 1.0000000e+000,-1.9525850e+000,
	 3.8452284e-005
};


// Lowpass filter, OFDM BW = 5050 Hz
// [z,p,k] = ellip(12,0.2,105,2*2525/fs)

#define OFDM_FILTER_STATE_5050		12
#define OFDM_FILTER_SEC_5050		 6

static float pm ofdmFilterCoef5050[2*OFDM_FILTER_STATE_5050 + 1] = {

	-8.8307214e-001, 1.8774261e+000, 1.0000000e+000,-3.7525039e-001,
	-9.0535201e-001, 1.8874016e+000, 1.0000000e+000,-1.6792571e+000,
	-9.3581198e-001, 1.9012291e+000, 1.0000000e+000,-1.8464370e+000,
	-9.6214510e-001, 1.9136859e+000, 1.0000000e+000,-1.8930425e+000,
	-9.8094398e-001, 1.9236539e+000, 1.0000000e+000,-1.9102821e+000,
	-9.9426429e-001, 1.9327573e+000, 1.0000000e+000,-1.9164884e+000,
	 9.1199235e-006
};


// Lowpass filter, OFDM BW = 5308 Hz
// [z,p,k] = ellip(14,0.2,105,2*2654/fs)

#define OFDM_FILTER_STATE_5308		14
#define OFDM_FILTER_SEC_5308		 7

static float pm ofdmFilterCoef5308[2*OFDM_FILTER_STATE_5308 + 1] = {

	-8.8148915e-001, 1.8756855e+000, 1.0000000e+000,-3.5235580e-001,
	-9.0390352e-001, 1.8854358e+000, 1.0000000e+000,-1.6725054e+000,
	-9.3441597e-001, 1.8987614e+000, 1.0000000e+000,-1.8434300e+000,
	-9.6044237e-001, 1.9102683e+000, 1.0000000e+000,-1.8914648e+000,
	-9.7826790e-001, 1.9184561e+000, 1.0000000e+000,-1.9098455e+000,
	-9.8947399e-001, 1.9242181e+000, 1.0000000e+000,-1.9176746e+000,
	-9.9688689e-001, 1.9291747e+000, 1.0000000e+000,-1.9206736e+000,
	 9.1726994e-006
};


// Lowpass filter, OFDM BW = 7500 Hz
// [z,p,k] = ellip(14,0.2,86,2*3792/fs)

#define OFDM_FILTER_STATE_7500	14
#define OFDM_FILTER_SEC_7500	 7

static float pm ofdmFilterCoef7500[2*OFDM_FILTER_STATE_7500 + 1] = {
	
	-8.1320926e-001, 1.7979881e+000, 1.0000000e+000, 1.6779655e-002,
	-8.5905429e-001, 1.8127676e+000, 1.0000000e+000,-1.5224503e+000,
	-9.1430935e-001, 1.8306175e+000, 1.0000000e+000,-1.7515668e+000,
	-9.5453660e-001, 1.8437160e+000, 1.0000000e+000,-1.8158420e+000,
	-9.7785430e-001, 1.8515525e+000, 1.0000000e+000,-1.8395428e+000,
	-9.9026296e-001, 1.8562644e+000, 1.0000000e+000,-1.8491276e+000,
	-9.9727688e-001, 1.8600700e+000, 1.0000000e+000,-1.8526334e+000,
	 9.4329440e-005
};


// Lowpass filter, OFDM BW = 8000 Hz
// [z,p,k] = ellip(14,0.2,86,2*4058/fs)

#define OFDM_FILTER_STATE_8000	14
#define OFDM_FILTER_SEC_8000	 7

static float pm ofdmFilterCoef8000[2*OFDM_FILTER_STATE_8000 + 1] = {

	-8.0121397e-001, 1.7838495e+000, 1.0000000e+000, 1.5547244e-001,
	-8.4992981e-001, 1.7970994e+000, 1.0000000e+000,-1.4608321e+000,
	-9.0870809e-001, 1.8131281e+000, 1.0000000e+000,-1.7171374e+000,
	-9.5154383e-001, 1.8249266e+000, 1.0000000e+000,-1.7898213e+000,
	-9.7639034e-001, 1.8320476e+000, 1.0000000e+000,-1.8167100e+000,
	-9.8961764e-001, 1.8364545e+000, 1.0000000e+000,-1.8275975e+000,
	-9.9709602e-001, 1.8402450e+000, 1.0000000e+000,-1.8315817e+000,
	 1.0231516e-004
	
};


// coef for copying input sample to output

#define COPY_IN2OUT_FILTER_STATE	2	
#define COPY_IN2OUT_FILTER_SEC		1

float pm copyIn2OutFilterCoef[2*COPY_IN2OUT_FILTER_STATE + 1] = {	

	0.0000000e+000,  0.0000000e+000,  0.0000000e+000,  0.0000000e+000,
	1.0000000e+000
};


#endif
